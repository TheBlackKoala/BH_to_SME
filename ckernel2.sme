type vdata: i32;
const len: u32 = 32;
type adata: vdata [ len ];
type tdata: { val:adata; valid:bool = false; len:u32;};

proc instr0()
	//Output
	bus a0l1: tdata;
	bus a1l0: tdata;
	var minLen : u32;
{
	if (a1l0.valid){
		minLen = a1l0.len;
		a0l1.valid = true;
		a0l1.len = minLen;
		for i = 0 to len - 1 {
			if (i<minLen){
				a0l1.val[i] = a1l0.val[i] + a1l0.val[i];
			}
		}
	}
	else{
		a0l1.valid = false;
	}
}

proc instr1()
	//Output
	bus a2l2: tdata;
	bus a0l1: tdata;
	var minLen : u32;
{
	if (a0l1.valid){
		minLen = a0l1.len;
		a2l2.valid = true;
		a2l2.len = minLen;
		for i = 0 to len - 1 {
			if (i<minLen){
				a2l2.val[i] = a0l1.val[i] + 2;
			}
		}
	}
	else{
		a2l2.valid = false;
	}
}

proc instr2()
	//Output
	bus a3l3: tdata;
	bus a0l2: tdata;
	bus a2l2: tdata;
	var minLen : u32;
{
	if (a0l2.valid && a2l2.valid){
		minLen = a0l2.len;
		if (minLen > a2l2.len){
			minLen = a2l2.len;
		}
		a3l3.valid = true;
		a3l3.len = minLen;
		for i = 0 to len - 1 {
			if (i<minLen){
				a3l3.val[i] = a0l2.val[i] + a2l2.val[i];
			}
		}
	}
	else{
		a3l3.valid = false;
	}
}

proc repeatera0l2()
	//Output
	bus a0l2: tdata;
	bus a0l1: tdata;
{
	if (a0l1.valid){
		a0l2.valid=true;
		for i = 0 to len -1 {
			if ( i < a0l1.len){
				a0l2.val[i] = a0l1.val[i];
			}
		}
		a0l2.len = a0l1.len;
	}
	else{
		a0l2.valid = false;
	}
}

proc repeatera0l3()
	//Output
	bus a0l3: tdata;
	bus a0l2: tdata;
{
	if (a0l2.valid){
		a0l3.valid=true;
		for i = 0 to len -1 {
			if ( i < a0l2.len){
				a0l3.val[i] = a0l2.val[i];
			}
		}
		a0l3.len = a0l2.len;
	}
	else{
		a0l3.valid = false;
	}
}

proc repeatera1l1()
	//Output
	bus a1l1: tdata;
	bus a1l0: tdata;
{
	if (a1l0.valid){
		a1l1.valid=true;
		for i = 0 to len -1 {
			if ( i < a1l0.len){
				a1l1.val[i] = a1l0.val[i];
			}
		}
		a1l1.len = a1l0.len;
	}
	else{
		a1l1.valid = false;
	}
}

proc repeatera1l2()
	//Output
	bus a1l2: tdata;
	bus a1l1: tdata;
{
	if (a1l1.valid){
		a1l2.valid=true;
		for i = 0 to len -1 {
			if ( i < a1l1.len){
				a1l2.val[i] = a1l1.val[i];
			}
		}
		a1l2.len = a1l1.len;
	}
	else{
		a1l2.valid = false;
	}
}

proc repeatera1l3()
	//Output
	bus a1l3: tdata;
	bus a1l2: tdata;
{
	if (a1l2.valid){
		a1l3.valid=true;
		for i = 0 to len -1 {
			if ( i < a1l2.len){
				a1l3.val[i] = a1l2.val[i];
			}
		}
		a1l3.len = a1l2.len;
	}
	else{
		a1l3.valid = false;
	}
}

proc repeatera2l3()
	//Output
	bus a2l3: tdata;
	bus a2l2: tdata;
{
	if (a2l2.valid){
		a2l3.valid=true;
		for i = 0 to len -1 {
			if ( i < a2l2.len){
				a2l3.val[i] = a2l2.val[i];
			}
		}
		a2l3.len = a2l2.len;
	}
	else{
		a2l3.valid = false;
	}
}

network bohrium(in a1: tdata, out a2: tdata, out a3: tdata){
	instance 0_inst of instr0();
	instance 1_inst of instr1();
	instance 2_inst of instr2();

	instance repa0l2 of repeatera0l2();
	instance repa0l3 of repeatera0l3();
	instance repa1l1 of repeatera1l1();
	instance repa1l2 of repeatera1l2();
	instance repa1l3 of repeatera1l3();
	instance repa2l3 of repeatera2l3();
	connect
		repa0l2.a0l2 -> repa0l3.a0l2,
		a1 -> repa1l1.a1l0,
		repa1l1.a1l1 -> repa1l2.a1l1,
		repa1l2.a1l2 -> repa1l3.a1l2,

		0_inst.a0l1 -> repa0l2.a0l1,
		a1 -> 0_inst.a1l0,
		1_inst.a2l2 -> repa2l3.a2l2,
		0_inst.a0l1 -> 1_inst.a0l1,
		repa0l2.a0l2 -> 2_inst.a0l2,
		1_inst.a2l2 -> 2_inst.a2l2,
		repa2l3.a2l3 -> a2,
		2_inst.a3l3 -> a3;
}
